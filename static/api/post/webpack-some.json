{
  "results": [{
    "id": "webpack-some",
    "title": "webbpack 那些事（一）",
    "content": "<div><p>        犯错让你更聪明<span class=\"special\">————德国寓言</span></p><p>        当我们（<span class=\"special\">大前端</span>）在构建web项目时，        必不可少的会使用webpack 强大而繁琐（望而生畏）。目前使用版本<span class=\"special\">2.x</span>。</p><blockquote><p>望而生畏：一见之下就产生了畏惧心理。形容人神态威严或事务艰难令人畏惧。</p></blockquote><p>        工具很强大。在前端大潮流下屹立不倒，体现其价值可见一斑。</p><p>最近在项目进行中，发现之前配置的<span class=\"special\">webpack.config.js</span>没有将外部（<span class=\"special\">另外一个项目</span>）        引入的js文件进行babel编译,导致在不支持es6的语法浏览器报错。（毋庸置疑，使用Chrome开发，是一个极其错误的决定。）</p><pre><code>    {        test: /.js?$/,        exclude: \"/node_modules/\",        use: [\"bable-loader\"]    }</code></pre><p><span class=\"special\">不知道为何这样简单的配置不能将外部项目的文件进行编译。</span></p><p>通过测试配置（可能不完善），如下配置可以进行babel编译，不知为啥。希望有更好的建议</p><pre><code><p>//格式化日期,function formatDate (date, format){    var paddNum = function (num) {</p><p>num += &quot;&quot;;</p><p>return num.replace(/^(d)$/, &quot;0$1&quot;);    }    //指定格式字符    var cfg = {</p><p>yyyy: date.getFullYear() //年 : 4位</p><p>, yy: date.getFullYear().toString().substring(2)//年 : 2位</p><p>, M: date.getMonth() + 1  //月 : 如果1位的时候不补0</p><p>, MM: paddNum(date.getMonth() + 1) //月 : 如果1位的时候补0</p><p>, d: date.getDate()   //日 : 如果1位的时候不补0</p><p>, dd: paddNum(date.getDate())//日 : 如果1位的时候补0</p><p>, hh: date.getHours()  //时</p><p>, mm: date.getMinutes() //分</p><p>, ss: date.getSeconds() //秒    }    format || (format = &quot;yyyy-MM-dd hh:mm:ss&quot;);    return format.replace(/([a-z])(\u0001)*/ig, function (m) {</p><p>return cfg[m];    });};//格式化CST日期的字串function formatCSTDate (strDate, format){    if(strDate==''){</p><p>return '';    }    return formatDate(new Date(strDate), format);};// 调用方法formatCSTDate(new Date(Date.now()), 'yyyy-MM-dd');</p></code></pre><p>        当我们同高不可攀的各种尖项技能狭路相逢，不要试图询问，因为，犯错不是罪，是让我们茁壮成长的信息。</p></div>",
    "image": "https://s3-us-west-2.amazonaws.com/s.cdpn.io/450744/kimon-maritz.jpg",
    "meta": {
      "description": "webpack，强大而深邃的Web构建工具，弥漫着无法抗拒的魔力，让人着迷。",
      "published": "2018-10-19T09:42:32Z",
      "author": "Young"
    }
  }]
}
